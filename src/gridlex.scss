/* ==========================================================================
    GRIDLEX
    Just a Flexbox Grid System
========================================================================== */

@import "gridlex-vars";

[#{$gl-attributeName}*="#{$gl-gridName}"]{
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  margin: 0 (-$gl-gutter/2);
}
[#{$gl-attributeName}^="#{$gl-colName}"],
[#{$gl-attributeName}*="#{$gl-colName}-"]{
  box-sizing: border-box;
  flex: 0 0 auto;
  padding: 0 ($gl-gutter/2) $gl-col-bottom;
}
[#{$gl-attributeName}^="#{$gl-colName}"]{
  flex: 1 1 0%;
}
[#{$gl-attributeName}^="#{$gl-gridName}"][#{$gl-attributeName}^="#{$gl-colName}"],
[#{$gl-attributeName}^="#{$gl-gridName}"][#{$gl-attributeName}*="#{$gl-colName}-"]{
  margin: 0;
  padding: 0;
}

/************************
    HELPERS SUFFIXES
*************************/
// FOR GRID
[#{$gl-attributeName}*="#{$gl-gridName}-"]{
// No spacing between cols : noGutter
  &[#{$gl-attributeName}*="-noGutter"]{
    margin: 0;
    > [#{$gl-attributeName}*="#{$gl-colName}"]{
      padding: 0;
    }
  }

// No Wrapping
  &[#{$gl-attributeName}*="-noWrap"]{
    flex-wrap: nowrap;
  }
// Horizontal alignment
  &[#{$gl-attributeName}*="-center"]{
    justify-content: center;
  }
  &[#{$gl-attributeName}*="-right"]{
    justify-content: flex-end;
    align-self: flex-end;
    margin-left: auto;
  }
// Vertical alignment
  &[#{$gl-attributeName}*="-top"]{
    align-items: flex-start;
  }
  &[#{$gl-attributeName}*="-middle"]{
    align-items: center;
  }
  &[#{$gl-attributeName}*="-bottom"]{
    align-items: flex-end;
  }

// Orders
  &[#{$gl-attributeName}*="-reverse"]{
    flex-direction: row-reverse;
  }
  &[#{$gl-attributeName}*="-column"] {
    flex-direction: column;
    > [#{$gl-attributeName}*="#{$gl-colName}-"] {
      flex-basis: auto;
    }
  }
  &[#{$gl-attributeName}*="-column-reverse"]{
    flex-direction: column-reverse;
  }

// Spaces between and around cols
  &[#{$gl-attributeName}*="-spaceBetween"]{
    justify-content: space-between;
  }
  &[#{$gl-attributeName}*="-spaceAround"]{
    justify-content: space-around;
  }

// Equal heights columns
  &[#{$gl-attributeName}*="-equalHeight"] > [#{$gl-attributeName}*="#{$gl-colName}"]{
    display: flex;
    flex-wrap: wrap;
    > *{
      flex: 1 0 100%;
    }
  }
// Removes the padding-bottom
  &[#{$gl-attributeName}*="-noBottom"] > [#{$gl-attributeName}*="#{$gl-colName}"]{
    padding-bottom: 0;
  }
}

// FOR COL
[#{$gl-attributeName}*="#{$gl-colName}-"]{
  &[#{$gl-attributeName}*="-top"]{
    align-self: flex-start;
  }
  &[#{$gl-attributeName}*="-middle"]{
    align-self: center;
  }
  &[#{$gl-attributeName}*="-bottom"]{
    align-self: flex-end;
  }
  &[#{$gl-attributeName}*="-first"]{
    order: -1;
  }
  &[#{$gl-attributeName}*="-last"]{
    order: 1;
  }
}

/************************
    GRID BY NUMBER
*************************/
@include makeGridByNumber(#{$gl-gridName});

@media #{$gl-lg}{
  @include makeGridByNumber(_lg);
}
@media #{$gl-md}{
  @include makeGridByNumber(_md);
}
@media #{$gl-sm}{
  @include makeGridByNumber(_sm);
}
@media #{$gl-xs}{
  @include makeGridByNumber(_xs);
}

/************************
    COLS SIZES
*************************/
@include makeCol(#{$gl-colName});
@include makeOff(off);

@media #{$gl-lg}{
  @include makeCol(_lg);
  @include makeOff(_lg);
}
@media #{$gl-md}{
  @include makeCol(_md);
  @include makeOff(_md);
}
@media #{$gl-sm}{
  @include makeCol(_sm);
  @include makeOff(_sm);
}
@media #{$gl-xs}{
  @include makeCol(_xs);
  @include makeOff(_xs);
}

/************************
    HIDING COLS
*************************/
[#{$gl-attributeName}*="#{$gl-colName}-"]:not([#{$gl-attributeName}*="#{$gl-colName}-0"]) {
  display: block;
}
[#{$gl-attributeName}*="#{$gl-gridName}"][#{$gl-attributeName}*="#{$gl-colName}-"]:not([#{$gl-attributeName}*="#{$gl-colName}-0"]) {
  display: flex;
}
[#{$gl-attributeName}*="#{$gl-colName}-"][#{$gl-attributeName}*="#{$gl-colName}-0"] {
  display: none;
}
@media #{$gl-lg}{
  [#{$gl-attributeName}*="#{$gl-gridName}"] {
    > :not([#{$gl-attributeName}*="_lg-0"]){
      display: block;
    }
    &:not([#{$gl-attributeName}*="_lg-0"]) {
      display: flex;
    }
    >[#{$gl-attributeName}*="_lg-0"],
    &[#{$gl-attributeName}*="-equalHeight"] > [#{$gl-attributeName}*="_lg-0"]{
      display: none;
    }
  }
}
@media #{$gl-md}{
  [#{$gl-attributeName}*="#{$gl-gridName}"] {
    > :not([#{$gl-attributeName}*="_md-0"]){
      display: block;
    }
    &:not([#{$gl-attributeName}*="_md-0"]) {
      display: flex;
    }
    >[#{$gl-attributeName}*="_md-0"],
    &[#{$gl-attributeName}*="-equalHeight"] > [#{$gl-attributeName}*="_md-0"]{
      display: none;
    }
  }
}
@media #{$gl-sm}{
  [#{$gl-attributeName}*="#{$gl-gridName}"] {
    > :not([#{$gl-attributeName}*="_sm-0"]){
      display: block;
    }
    &:not([#{$gl-attributeName}*="_sm-0"]) {
      display: flex;
    }
    >[#{$gl-attributeName}*="_sm-0"],
    &[#{$gl-attributeName}*="-equalHeight"] > [#{$gl-attributeName}*="_sm-0"]{
      display: none;
    }
  }
}
@media #{$gl-xs}{
  [#{$gl-attributeName}*="#{$gl-gridName}"] {
    > :not([#{$gl-attributeName}*="_xs-0"]){
      display: block;
    }
    &:not([#{$gl-attributeName}*="_xs-0"]) {
      display: flex;
    }
    >[#{$gl-attributeName}*="_xs-0"],
    &[#{$gl-attributeName}*="-equalHeight"] > [#{$gl-attributeName}*="_xs-0"]{
      display: none;
    }
  }
}
